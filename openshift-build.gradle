import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.container.extras.*
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
apply plugin: com.bmuschko.gradle.docker.DockerJavaApplicationPlugin

if (project.hasProperty('openshiftEnv')) {
    ext.openshiftEnv = openshiftEnv.replaceAll('/', '-')
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:3.2.6"
    }
}

task buildDocker(type: DockerBuildImage) {

    tag = "innovateuk/${project.name.replaceAll(/ifs-/, "")}"
    inputDir = project.projectDir

    outputs.upToDateWhen {

        def image = tag
        if(image.contains(":")) {
            image = image.substring(0, image.indexOf(":"))
        }

        "docker images".execute().text.contains("$image ")
    }
}

task pushDockerImages(type: Exec, dependsOn: buildDocker) {
    executable = 'push-images.sh'
    args = [project.properties['NEXUS_USERNAME'], project.properties['NEXUS_PASSWORD'], project.properties['NEXUS_URL']]

}